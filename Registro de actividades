#include <iostream>
#include <string>

using namespace std;

struct Actividad {
    string nombre;
    string hora;
};

void agregarActividad(Actividad actividades[], int& contador) {
    if (contador < 10) {
        cin.ignore(); // Limpia el buffer de entrada
        cout << "Nombre de la actividad: ";
        getline(cin, actividades[contador].nombre);
        cout << "Hora de la actividad: ";
        cin >> actividades[contador].hora;
        contador++;
    } else {
        cout << "Ya has alcanzado el límite de actividades." << endl;
    }
}

void mostrarActividades(const Actividad actividades[], int contador) {
    cout << "Lista de actividades:" << endl;
    for (int i = 0; i < contador; i++) {
        cout << i + 1 << ". " << actividades[i].nombre << " a las " << actividades[i].hora << endl;
    }
}

void eliminarActividad(Actividad actividades[], int& contador) {
    if (contador > 0) {
        cout << "Ingrese el número de actividad a eliminar (1-" << contador << "): ";
        int numero;
        cin >> numero;

        if (numero >= 1 && numero <= contador) {
            for (int i = numero - 1; i < contador - 1; i++) {
                actividades[i] = actividades[i + 1];
            }
            contador--;
            cout << "Actividad eliminada correctamente." << endl;
        } else {
            cout << "Número de actividad no válido." << endl;
        }
    } else {
        cout << "No hay actividades para eliminar." << endl;
    }
}

int main() {
    Actividad actividades[10];
    int contador = 0;

    int opcion;
    do {
        cout << "Menu:" << endl;
        cout << "1. Agregar actividad" << endl;
        cout << "2. Mostrar actividades" << endl;
        cout << "3. Eliminar actividad" << endl;
        cout << "4. Salir" << endl;
        cout << "Selecciona una opción: ";
        cin >> opcion;

        switch (opcion) {
            case 1:
                agregarActividad(actividades, contador);
                break;
            case 2:
                mostrarActividades(actividades, contador);
                break;
            case 3:
                eliminarActividad(actividades, contador);
                break;
            case 4:
                cout << "Saliendo del programa." << endl;
                break;
            default:
                cout << "Opción no válida." << endl;
        }
    } while (opcion != 4);

    return 0;
}
